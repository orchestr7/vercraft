name: Create release to Maven Central

on:
  push:
    branches:
      - 'release/**'

env:
  PGP_SEC: ${{ secrets.PGP_SEC }}
  PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
  SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

jobs:
  central_release:
    name: Build release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Status git before
        run: git status

      - uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper

      - name: Gradle release to Sonatype
        run: ./gradlew --console=rich -Prelease -PgprUser=${{ github.actor }} -PgprKey=${{ secrets.GITHUB_TOKEN }} publishToSonatype

      - name: Status git after
        if: ${{ always() }}
        run: git status

  github_release:
    needs: central_release
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/release/}"
          TAG_NAME="v${BRANCH_NAME}"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false